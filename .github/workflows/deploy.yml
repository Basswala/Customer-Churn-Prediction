# GitHub Actions CI/CD Pipeline for Customer Churn Prediction
#
# This workflow:
# 1. Triggers on push to main branch
# 2. Builds Docker image
# 3. Pushes to Docker Hub
# 4. (Optional) Deploys to cloud (AWS ECS, GCP Cloud Run, etc.)

name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/telco-churn-app
  IMAGE_TAG: latest

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # Step 5: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      # Step 6: Output image details
      - name: Output image details
        run: |
          echo "Image pushed: ${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}"
          echo "Image digest: ${{ steps.build.outputs.digest }}"

  # OPTIONAL: Deploy to AWS ECS
  # Uncomment and configure if deploying to AWS
  # deploy-aws-ecs:
  #   name: Deploy to AWS ECS
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #
  #     - name: Update ECS service
  #       run: |
  #         aws ecs update-service \
  #           --cluster churn-prediction-cluster \
  #           --service churn-prediction-service \
  #           --force-new-deployment

  # OPTIONAL: Deploy to GCP Cloud Run
  # Uncomment and configure if deploying to GCP
  # deploy-gcp-cloud-run:
  #   name: Deploy to GCP Cloud Run
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #
  #   steps:
  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_SA_KEY }}
  #
  #     - name: Deploy to Cloud Run
  #       uses: google-github-actions/deploy-cloudrun@v1
  #       with:
  #         service: churn-prediction-api
  #         image: ${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
  #         region: us-central1
